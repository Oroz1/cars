# Generated by Django 4.0.5 on 2022-06-17 11:23

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='avatars/', verbose_name='аватарка')),
                ('username', models.CharField(max_length=150, unique=True, verbose_name='Имя пользователя')),
                ('name', models.CharField(blank=True, max_length=150, verbose_name='Полная имя')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Элетронная почта')),
                ('phone_number', models.CharField(max_length=15, null=True, verbose_name='Номер телефона')),
                ('information', models.TextField(blank=True, null=True, verbose_name='Информация о пользователе')),
                ('is_staff', models.BooleanField(default=False, verbose_name='Статус персонала')),
                ('is_active', models.BooleanField(default=False, verbose_name='Подтверждение по почте')),
                ('is_superuser', models.BooleanField(default=False, verbose_name='Статус администратора')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Пользователь',
                'verbose_name_plural': 'Пользователи',
            },
        ),
        migrations.CreateModel(
            name='Brands',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='дата добавление')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='дата изменения')),
                ('title', models.CharField(max_length=100, verbose_name='название марки')),
            ],
            options={
                'verbose_name': 'Марка',
                'verbose_name_plural': 'Марки',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Currencies',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='дата добавление')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='дата изменения')),
                ('title', models.CharField(max_length=100, verbose_name='название валюты')),
            ],
            options={
                'verbose_name': 'валюта',
                'verbose_name_plural': 'валюты',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='FuelTypes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='дата добавление')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='дата изменения')),
                ('title', models.CharField(max_length=100, verbose_name='название вида топлива')),
            ],
            options={
                'verbose_name': 'вид топлива',
                'verbose_name_plural': 'виды топлива',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Gearboxes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='дата добавление')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='дата изменения')),
                ('title', models.CharField(max_length=100, verbose_name='название типа КПП')),
            ],
            options={
                'verbose_name': 'тип КПП',
                'verbose_name_plural': 'типы КПП',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Images',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='дата добавление')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='дата изменения')),
                ('title', models.CharField(max_length=100, null=True, verbose_name='название фотографий')),
                ('image', models.ImageField(upload_to='cars_images/%Y/%m/%d/', verbose_name='изображение')),
            ],
            options={
                'verbose_name': 'фотографий',
                'verbose_name_plural': 'фотография',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Models',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='дата добавление')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='дата изменения')),
                ('title', models.CharField(max_length=100, verbose_name='название модели')),
            ],
            options={
                'verbose_name': 'модель машины',
                'verbose_name_plural': 'модели машины',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='TypeOfCars',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='дата добавление')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='дата изменения')),
                ('title', models.CharField(max_length=100, verbose_name='название типа машины')),
            ],
            options={
                'verbose_name': 'вид машины',
                'verbose_name_plural': 'виды машин',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='TypeOfDrives',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='дата добавление')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='дата изменения')),
                ('title', models.CharField(max_length=100, verbose_name='название типа привода')),
            ],
            options={
                'verbose_name': 'тип привода',
                'verbose_name_plural': 'типы приводов',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Cars',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='дата добавление')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='дата изменения')),
                ('title', models.CharField(max_length=255, verbose_name='название')),
                ('price', models.DecimalField(decimal_places=3, max_digits=10, verbose_name='стоисомть')),
                ('description', models.CharField(max_length=1200, verbose_name='описание')),
                ('year_of_issue', models.PositiveIntegerField(verbose_name='год выпуска')),
                ('volume', models.DecimalField(decimal_places=1, max_digits=2, verbose_name='объем')),
                ('views', models.PositiveIntegerField(default=0, verbose_name='Просмотры')),
                ('brand', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.brands', verbose_name='марка')),
                ('currency', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.currencies', verbose_name='валюта')),
                ('fuel_type', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.fueltypes', verbose_name='тип топлива')),
                ('gearbox', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.gearboxes', verbose_name='КПП')),
                ('images', models.ManyToManyField(to='core.images', verbose_name='фотографий')),
                ('model', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.models', verbose_name='модель')),
                ('owner', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='владелец')),
                ('type_of_car', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.typeofcars', verbose_name='вид машины')),
                ('type_of_drive', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.typeofdrives', verbose_name='привод')),
            ],
            options={
                'verbose_name': 'машины',
                'verbose_name_plural': 'машина',
                'ordering': ['-created_at'],
            },
        ),
    ]
